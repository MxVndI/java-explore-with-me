{
  "info": {
    "_postman_id": "3257defe-86bf-4418-8129-19d6e049785d",
    "name": "feature_comments",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "26878505"
  },
  "item": [
    {
      "name": "Добавление комментария",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
              "    pm.response.to.have.status(201);",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "",
              "const source = JSON.parse(pm.request.body.raw);",
              "const target = pm.response.json();",
              "",
              "pm.test(\"Комментарий должен содержать поля: id, created, text, authorId\", function () {",
              "    pm.expect(target).to.have.property('id');",
              "    pm.expect(target).to.have.property('text');",
              "    pm.expect(target).to.have.property('authorId');",
              "    pm.expect(target).to.have.property('created');",
              "});",
              "",
              "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {",
              "    pm.expect(target.id).to.not.be.null;",
              "    pm.expect(source.text).equal(target.text);",
              "    pm.expect(target.authorId).equal(2);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\\r\\n    \\\"text\\\": \\\"Comment for event  from user \\\"\\r\\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/users/:userId/events/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "users",
            ":userId",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            },
            {
              "key": "eventId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Получение комментария",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const body = pm.response.json();",
              "",
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {",
              "    pm.response.to.be.ok;",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "users",
            ":userId",
            ":commentId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            },
            {
              "key": "commentId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Обновление комментария",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {",
              "    pm.response.to.be.ok;",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "const source = JSON.parse(pm.request.body.raw);",
              "const target = pm.response.json();",
              "",
              "pm.test(\"Категория должна содержать поля: id, created, text, authorId\", function () {",
              "    pm.expect(target).to.have.property('id');",
              "    pm.expect(target).to.have.property('text');",
              "    pm.expect(target).to.have.property('authorId');",
              "    pm.expect(target).to.have.property('created');",
              "});",
              "",
              "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {",
              "    pm.expect(target.id).to.not.be.null;",
              "    pm.expect(source.text).equal(target.text);",
              "    pm.expect(target.id).equal(1);",
              "    pm.expect(target.authorId).equal(2);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\\r\\n    \\\"text\\\": \\\"Update Comment for event 1 from user 2\\\"\\r\\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "users",
            ":userId",
            ":commentId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            },
            {
              "key": "commentId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Удаление комментария",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 204\", function () {",
              "    pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "users",
            ":userId",
            ":commentId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "6"
            },
            {
              "key": "commentId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": " http://localhost:8080"
    }
  ]
}