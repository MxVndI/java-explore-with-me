{
  "info": {
    "_postman_id": "3257defe-86bf-4418-8129-19d6e049785d",
    "name": "feature_comments",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "26878505"
  },
  "item": [
    {
      "name": "Valid",
      "item": [
        {
          "name": "Success",
          "item": [
            {
              "name": "Добавление комментария",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                      "    pm.response.to.have.status(201);   \r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r",
                      "\r",
                      "const source = JSON.parse(pm.request.body.raw);\r",
                      "const target = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Комментарий должен содержать поля: id, created, text, authorId\", function () {\r",
                      "pm.expect(target).to.have.property('id');\r",
                      "pm.expect(target).to.have.property('text');\r",
                      "pm.expect(target).to.have.property('authorId');\r",
                      "pm.expect(target).to.have.property('created');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
                      "    pm.expect(target.id).to.not.be.null;\r",
                      "    pm.expect(source.text).equal(target.text);\r",
                      "    pm.expect(target.authorId).equal(2);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"text\": \"Comment for event  from user \"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/events/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    "events",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    },
                    {
                      "key": "eventId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "получение комментария",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const body = pm.response.json(); // получаем тело ответа в формате JSON\r",
                      "\r",
                      "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
                      "    pm.response.to.be.ok; // код ответа должен быть равен 200 OK\r",
                      "    pm.response.to.be.withBody; // ответ должен содержать тело\r",
                      "    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
                      "})\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    },
                    {
                      "key": "commentId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Обновление комментария",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
                      "    pm.response.to.be.ok; // код ответа должен быть равен 200 OK\r",
                      "    pm.response.to.be.withBody; // ответ должен содержать тело\r",
                      "    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
                      "}); \r",
                      "const source = JSON.parse(pm.request.body.raw);\r",
                      "const target = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Категория должна содержать поля: id, created, text, authorId\", function () {\r",
                      "pm.expect(target).to.have.property('id');\r",
                      "pm.expect(target).to.have.property('text');\r",
                      "pm.expect(target).to.have.property('authorId');\r",
                      "pm.expect(target).to.have.property('created');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
                      "    pm.expect(target.id).to.not.be.null;\r",
                      "    pm.expect(source.text).equal(target.text);\r",
                      "    pm.expect(target.id).equal(1);\r",
                      "    pm.expect(target.authorId).equal(2);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"text\": \"Update Comment for event 1 from user 2\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    },
                    {
                      "key": "commentId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "получение обновленного комментария",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const body = pm.response.json(); // получаем тело ответа в формате JSON\r",
                      "\r",
                      "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
                      "    pm.response.to.be.ok; // код ответа должен быть равен 200 OK\r",
                      "    pm.response.to.be.withBody; // ответ должен содержать тело\r",
                      "    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
                      "})\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    },
                    {
                      "key": "commentId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Добавление комментария от user6 to event2.",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                      "    pm.response.to.have.status(201);   \r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"text\": \"Comment for event  from user \"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/events/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    "events",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "6"
                    },
                    {
                      "key": "eventId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "получение комментариев события",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.be.ok;\r",
                      "   pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r",
                      "\r",
                      "const target = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Ответ должен быть массивом\", function () {\r",
                      "    pm.expect(target).is.an('array');\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/comments/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "eventId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "получение событий с количеством комментов",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.be.ok;\r",
                      "   pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r",
                      "\r",
                      "const source = pm.collectionVariables.get('response');\r",
                      "const target = pm.response.json()[0];\r",
                      "\r",
                      "pm.test(\"Событие должно содержать поля: id, title, annotation, category, paid, eventDate, initiator, views, confirmedRequests, comments\", function () {\r",
                      "pm.expect(target).to.have.property('id');\r",
                      "pm.expect(target).to.have.property('title');\r",
                      "pm.expect(target).to.have.property('annotation');\r",
                      "pm.expect(target).to.have.property('category');\r",
                      "pm.expect(target).to.have.property('paid');\r",
                      "pm.expect(target).to.have.property('eventDate');\r",
                      "pm.expect(target).to.have.property('initiator');\r",
                      "pm.expect(target).to.have.property('views');\r",
                      "pm.expect(target).to.have.property('confirmedRequests');\r",
                      "pm.expect(target).to.have.property('comments');\r",
                      "});\r",
                      "pm.test(\"Данные в ответе должны соответствовать данным в запросе// у события с id=2 должно быть два комментария\", function () {\r",
                      "    pm.expect(target.comments).to.not.be.null;\r",
                      "    pm.expect(target.comments).equal(2);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/events",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "events"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "получение комментариев события, пустой лист",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.be.ok;\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/comments/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "eventId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Удаление комментария",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 204\", function () {\r",
                      "    pm.response.to.have.status(204);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "6"
                    },
                    {
                      "key": "commentId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Удаление комментария админом",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 204\", function () {\r",
                      "    pm.response.to.have.status(204);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/admin/comments/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "comments",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "commentId",
                      "value": "3"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": " http://localhost:8080"
    },
    {
      "key": "Event ID",
      "value": "{(eid)}"
    },
    {
      "key": "eid",
      "value": "eid"
    },
    {
      "key": "uid",
      "value": "uid"
    }
  ]
}
